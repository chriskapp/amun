
[FEATURES]

[x] fix captcha url
[ ] Oauth endpoint send invalid request method header on GET at request/access
[x] fix getId() from records
[x] fix form reference src endpoints
[ ] fix tests
[x] extract functionality from the core service into different services
    [x] split core service into different services probably content / system and 
        user service
[ ] support host meta to return json and xrd / jrd
[x] build swagger geenrator for the current api (get api details from docblock
    comments). Problem to generate the declaration we have to import every api
    endpoint wich all have the same class name "index" .. namespaces
[x] test oauth authorization
[x] test openid authentication
[ ] adding oauth scope
[x] implement event listener system where services can offer an endpoint where
    other classes can subscribe to.
    [ ] update webdav service probably with handler so that services can provide 
        their own content
    [x] possibility for services to extend the service config.xml
    [x] possibility for services to extend the meta lrdd api
[ ] check activity stream and approval system
[ ] improve right system probably with inheritance
[ ] possiblity to add more meta data to a page (keywords, description)
    [ ] A option to create a pasword protected page. This should be general so 
        that you can protect any page with an password ... at this move we can 
        also add a possibility to add more meta data to a page (i.e. dublincore)
[ ] Implement reference input field in backend
[ ] comments wich are added should not force a reload instead they should be
    added directly to the html
[ ] update phpdoc for proper API generation
[ ] build general achievment system where a user based on the karma value (or
    probably other conditions) gets specific achievments on the profile
[ ] my service add possibility to delete (invalidate) an account
[ ] my service add data export function where a user can export all records wich
    he made in an XML or maybe HTML format
[ ] if someone has subscribed via PSHB to a topic and we receive these messages
    we have to create a remote user for the author of the topic if the user id
    doesnt exist.
[ ] a general way to embed content like images videos etc to an page using
    oembed i.e. you can add photo, video. We could use the html filter to get
    all urls and make an Oembed request ... if we find an enpoint we attach
    the meta data to the record
[ ] implement an http proxy for making ajax requests to external domains (same
    origin policy stuff) ... we should put the proxy class into the psx
    framework because its not amun specific and a well written proxy is in
    general needed
[ ] test ostatus remote subscription interoperability
[x] fix api insert
[x] update all services using the new service class for right and api endpoint 
    issues
[x] improve installer design and flow
[x] renaming record classes from i.e. Amun_Service_News to 
    Amun_Service_News_Record to eb able to add later a namespace
[x] Add possibility to upload media in different folders
[x] build namespace package system i.e. org.amun.comment

[SERVICES]

[x] add phpinfo backend service
[ ] add database backend service
[ ] add tent (https://tent.io/) app wich can post and receive messages for an 
    user maybe integrate this into my service
[x] add sitemap service
[ ] write docbook plugin wich can displays docbook xml
[ ] build api generator service wich builds based on the library classes an
    api index where all users can comment rate etc.
[ ] add CMIS API service
[ ] add calendar service and implement repeat feature. Use webdav service to
    offer an CalDAV api
[ ] add faq service add "was that helpful" to each question answer pair to
    determine whether its helpful or not and to make a gadget wich shows the
    best questions and answers
[ ] code reflection service where we have a given source folder with classes. To
    each class we can add comments and discuss about problems, improvements, etc
    Should be helpful for any opensource project.
[ ] write a todo plugin where you can post jobs and these jobs can taken by
    users (ticketsystem) each job should have also an priority
[ ] create a bugtracker plugin .. where user can submit a bug. A bug can have
    different states (new, feedback, recognized, confirmed, assigned, done,
    closed). probably merge with todo plugin
[ ] add pm (private message) plugin where users can post and receive messages
    from other users. (should be hooked into the my service)
[ ] group service where users can join a group like on myspace or facebook etc
[ ] write media plugin where users can add videos by simply add an URL into an
    textfield. We use oEmbed to discover the video like in the gallery plugin.
[ ] write wiki plugin
[ ] write statistic plugin ... the plugin logs all site access etc ... maybe you
    can add analytics key and the plugin requests the google API
[ ] write a plugin with that you can donwload plugins from a server ... the
    client gets a list of all plugins via an xml or json list if he want to
    install a paticular plugin the client donwload all files in an xml format
    and create the files and directories in the plugin dir (this is a big task)
[ ] write blog plugin
[ ] write partner plugin ... the plugin has an backlink page where all partner
    pages must link to to get incoming links an get displayed at the partner
    page.
[ ] write a cronjob plugin where you can add cronjob this cronjobs are in the
    plugin folder cron. The plugin watches whether the script was executed at a
    time. Scripts can be clean up inactive user etc. The call it self must be
    made by a cronjob the plugin is only for observing whether the cronjob was
    executed or not
[ ] write chat plugin. Should be made with AJAX someone can add a message and
    every x seconds a script checks via XHR for a new message. (Probably using
    websockets for this)
[ ] write system mail plugin where the admin can send mails to all users (that
    means if the user has provided an email address we send an email else not)
[ ] write database plugin where user can admister the tables (like phpmyadmin
    ... were not running out of fun for the next years xD)
[ ] write backup plugin so that it is possible to backup the complete website
    and restore them
[ ] create shop plugin (this is for the future ^^)

[DONE]

[x] Create ant build file for building the release and docs
[/] Implement OpenAjax_Hub_2.0 / OpenSocial gadget javascript libraries for
    gadgets
[x] Move to github
[x] Add pipe service wich redirects the content of an file to the service output
    Depending on the file extension we use different output. If its an html we
    use the raw content if its md we use an markdown parser if its txt we use
    the pre tag etc. In this way you could easily take your content under 
    version control.
[x] Add ace editor
[x] Add page tree to content page panel
[x] Add gadgets to page add/edit
[x] test lrdd / foaf / oembed and media upload
[x] test whether services can be installed with a custom global namespace and
    not in the "amun service" namespace
[x] implement limitation so that a user can insert max x entries per day to the
    database to protect from malicious user. we can place it in the backend at
    system / security ... an admin can set there all limits. We can use the
    system_logging table to see how much entries a user has made at this day.
    Probably display an captcha after the user has inserted x entries
[x] general way for gadgets to add appdata to a specific gadget.
[x] authorProfileUrl and authorThumbnailUrl are not correct handeled by the
    fields param by an api request
[x] If we create a remote user we must get the global id from the remote website
    so we dont have to generate a global id because else the relation get lost
[x] implement the activity streams object in the atom feed
[x] implement a parser wich searches a content for @[user_name] or other
    commands and add a link to the user profile like on twitter or status.net
    also add syntax highliting ... all this should be done by hacking something
    into htmlpurifier at the class amun / filter / htmlpurifier ...
    so you can type [url_title] to refer to another page and !group for a
    specific group and #tag for an tag
[x] test openid statusnet interoperability
[x] test openid interoperability between different systems i.e. status.net,
    wordpress, drupal) (tested successful with openid4java library google and
    yahoo)
[x] my service add privacy settings so users can set who can see the activity
    entries ... at the moment all entries are public
[x] my service option to change password (or set pw if you are logged in via
    openid)
[x] option for users to hide an activity
[x] add user friend groups to my service so users can organize friends into
    groups wich is useful for other services i.e. pm so you can write a pm to a
    specific group or privacy to show activiies only to a specific group of
    users
[x] write plugin service where users can create and maintain plugins and add new
    releases. Other users can download rat and report problems to this plugin
[x] write tracker plugin where users can add and download torrent files. The
    website can be used as tracker (probably using PHPTracker library).
[x] improve and extend the page tree api (retrieve / order sort).
[/] when you uninstall a plugin the rights should also deleted. The problem is
    to identify wich entries were inserted by the plugin. We could scan the
    config.xml for all inserts and delete the values but what if the values
    are changed? Probably its to risky to implement that. (With the new config
    scheme we dont have a save way to determine wich rights are inserted)
[x] migrate existing services to new psx_data_record structure
[x] update default template by using a clear css schems and standard use of
    html tags wich should make it easier to costumize the default template.
    Avoid style="" attribute in html.
[x] edit correct time handling in database use DATETIME field instead of
    VARCHAR + timestamp
[x] edit feed admin backend to view the fetched entries and to see the status
[x] plugin svn mirror (webdav)
[/] write ban plugin where the admin can ban specific ips or ip ranges. This is
    useful to exclude members from other countries etc. (we need hooks for that)
[x] Services should have the option to add libraries also on the top level
    and not only in the folder Amun/Service/[service]. I.e. if a service uses
    another library like Zend or SabreDAV there is no way to add this to the
    library.
[x] check whether user / account api is portablecontact spec conform
[/] create a mechanism that monitor the user behaviour and try to recognize
    whether its a hacker or a normal user (phpids impact based)
[x] redesign my service
[x] redesign default css theme
[x] test gadgets, api, applications
[x] fix approval system
[x] check and probably redefine user rights
[x] because of getHumbnailUrl() we cant display image correct if we join on the
    account table because we haven another object (fixed we save the complete
    thumbnailUrl in the account column)
[/] Implement a login lock for 1 hour after 3 time entering the wrong password
    for the backend. The client is identfied by the ip probably and the ban is
    saved in an SQL table (we dont have a backend anymore)
[/] Implement javascript form parser for the backend in extjs (obsolet because
    the backend is no longer part of amun)
[x] fix openid google and yahoo login
[x] add activitystreams support
[x] update webfinger support on registration
[x] build DTD or XSD for config.xml schema
[x] Rename system_logging to system_log
[x] Handling owner managment so that only administrators can delete records
    from other user
[x] update the system vars add a data type column and default value
[x] add an xform mechanism for all apis so we can dynamically can generate the
    forms for the backend and frontend .. at the backend we use extjs at the
    frontend we must write an xforms parser with jquery
[x] add path colum to page table so we can construct the absolute url of an page
    by joining to the content_page table
[x] removed old services from the repo
[x] update the css structure using class names for each component
[x] change gadget structure using *.tpl gadgets instead of xml gadgets for speed
    increasment so we dont have to parse the xml simply include the *.tpl gadget
    so we can remove to template/os folder
[x] update the page table so that we can use the modified preorder tree
    traversal method so we need less queries to get the path
[/] backend implement general search option useful for plugins like forum where
    we can expect a huge amount of entries. (obsolte because the backend is no
    longer part of amun)
[x] A "forget password" option so that users can recover their passwords if they
    have lost it .. (only possible if the user has provided an email address)
[x] implement js and css loader endpoint wich concatenate all given files to
    one big css or js file using a cache mechanism and probably minify the css
    or js.
[x] we need a general approve mechanism that you can turn on or off for every
    page ... if its on every submission to the database is stored in a qeue
    table. If the submission is approved the submission is inserted to the
    database. This has the advantage that the approve mechanism is independent
    from the module. The approval system should be able to specify approval for
    user or user groups, for pages, for tables
[x] create admin group and admin right table so we have the same right managment
    as at the frontend wich is more flexible then the current system ... but
    each plugin has also to insert the rights wich exist at the backend into the
    admin right table
[/] write a mechanism that plugins can register a hook. This hook is called on
    every page ... you can implement a hook by adding a module to the autoload
    xml this is probably faster then using a sql table where the hooks are
    defined ... but it is more difficult for the user to implement because they
    has to edit a file xD instead of using the web interface (not needed)
[x] build an award system. Users get an specified award if they have fullfil
    specific conditions (implemented ... each use has a "karma" value wich
    represents the overall activity of the user based on this value we can add
    a rank)
[x] We implement a notification queue this is an API wich lists all
    notifications wich should be send. This has the advantage that we can keep
    the php code away from XMPP, Email, etc stuff instead you can easy write an
    cronjob script wich calls every x minutes the API endpoint and makes the
    heavy stuff. This is solved by the pshb notification system because you can
    write a script wich subscribes to a specific topic (table) and it gets
    informed via the pshb server if a new entry is inserted.
[x] general event system wich execute an action on an event. I.e. call an url
    (webhook) or send an email to an user. The event system should be called
    via an cronjob so that it doesnt slow down the site.
[x] remove admin content / tree and include the tree in the page module so that
    you can add new pages in the tree
[x] use DateTime object complete in the backend so that new entries are also
    stored as UTC
[x] write articel plugin where an admin must approve each article (approve of
    article will be covered by the general approve system)
[x] write search plugin
[x] implement a level system for each user depending on contribution ... in the
    backend we can set costum levels means each user group can be assigned to
    different levels
[x] add who has latest post on a thread in forum plugin to the overview
[x] add description column for categories ... so users can add a description
[x] birthday is not valid my/settings
[x] build article plugin same as page but you can comment the page and rate
    the article (we convert the list plugin to the article plugin)
[x] add dashboard to backedn tabs: latest user, stats, user map, option to add
    plugin backend to the dashboard, api requests, analytics,
[x] upgrade underlying psx framework to version 0.3.1 (big task ^^)
[x] check whether ciritcal security hole exists that normal user can login to
    the backend (does not exitst we check whether the user has an admin status)
[x] we need a general way where gadgets can store config options ... probably we
    should use the mechanism wich is also use by opensocial gadgets to store
    data called "AppData" ... but we access them on the serverside not per js
[x] sort CSS for website in different CSS files so that we have one core CSS and
    thing wich are designed for other module goe in an extra css file
[x] test page extra right and gadget system
[x] movie user/api to system/api in admin section
[x] update psx cms feed mechanism
[x] add webfinger support to login so we can discover (we check manual the
    provider)
[x] update the feed plugin and make it as an pshb consumer
[x] update plugin raw .. use Runkit_Sandbox instead of tokens (is not available
    by default but from now you can edit that only at the backend)
[x] update psx to version 0.2.2
[x] update oAuth plugin (delete oauth plugin and integrate it native as module)
[x] add OpenID plugin (we have integrated that native as login option)
[x] fix contact plugin ... captcha doesnt work
[x] fix recaptcha handler ... put captcha lib to component
[x] my plugin create add friend function and create table friend_connection
[x] fix backend page edit where form should work with tabs
[x] rewrite doc comments in plugin
[x] rewrite sql statments
[x] fix bug that you cant add/edit/delete a page twice
[x] write dashboard for admin backend an overview with the most important
    informations displayed after the login. you can add to the dashboard any
    installed plugin
[x] write new captcha protection
[/] implement google gears (google has dropped support)
[x] develope abstract psx.common classes for form panel etc...
[x] minify plugin js and remove not used components from extjs
[x] create an system system log page where all activities are logged
    i.e you can say on a page all user have anonymous rights:

	administrator => administrator
	moderator     => anonymous
	user          => anonymous

    if a page has special rights the user groups where assigned otherwise it
    loads normally
[x] fix development plugin
[x] content plugin. If you have selected a plugin display the xml infos from the
    config
[x] write openid plugin wich enables user to login with an openid (we have
    implemented that natvie without plugin)
[x] write plugin my control panel where a user can change his password setting
    an avatar etc. we have done this native so no plugin is needed because its
    a social CMS
[x] write newsletter plugin (was done but removed because theres no good way to
    send bulk mails)

________________________________________________________________________________
$Id: todo.txt 880 2012-10-27 13:14:26Z k42b3.x@googlemail.com $


