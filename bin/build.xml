<?xml version="1.0" encoding="UTF-8"?>
<project name="amun" default="build-release" basedir="..">
	<description>PSX build script</description>

	<property name="build" location="bin/amun" />
	<property name="bin" location="bin" />
	<property name="doc" location="doc" />

	<taskdef name="git-clone" classname="org.eclipse.jgit.ant.tasks.GitCloneTask" />

	<!-- clone the repository -->
	<target name="git-check">
		<available file="${build}" property="repository.available" />
	</target>

	<target name="git-clone" depends="git-check" unless="repository.available">
		<git-clone uri="https://github.com/k42b3/amun.git" dest="${build}" />
	</target>

	<target name="install-dependencies">
		<exec dir="${build}" executable="composer.bat" failonerror="true">
			<arg line="install --no-interaction" />
		</exec>
	</target>

	<target name="setup-sql">
		<exec dir="${build}" executable="mysql" failonerror="true">
			<arg line="-u root -e 'drop database amun_db;'" />
		</exec>
		<exec dir="${build}" executable="mysql" failonerror="true">
			<arg line="-u root -e 'create database amun_db;'" />
		</exec>
		<sql driver="com.mysql.jdbc.Driver" url="jdbc:mysql://localhost/amun_db?user=root&amp;password=" userid="root" password="" src="${build}/tests/amun.sql" />
	</target>

	<target name="start-webserver">
		<exec dir="${build}" executable="php" spawn="true">
			<arg line="-S 127.0.0.1:8000" />
		</exec>
		<sleep seconds="4" />
	</target>

	<target name="phpunit" depends="git-clone,setup-sql,install-dependencies,start-webserver">
		<!-- run tests -->
		<exec dir="${build}" executable="phpunit.bat" failonerror="true" />
		<!-- run js tests -->
		<exec dir="${build}" executable="phantomjs" failonerror="true">
			<arg line="tests/testee.js tests/frontend http://127.0.0.1:8000/public/index.php/" />
		</exec>
		<!-- clean temp files from test -->
		<!-- 
		<delete>
			<fileset dir="${build}/cache" />
		</delete> 
		-->
	</target>

	<!-- we need to get the version before cleaning -->
	<target name="get-version">
		<exec dir="${bin}" executable="php" failonerror="true" outputproperty="version">
			<arg line="get-version.php" />
		</exec>
		<echo message="Building version ${version}" />
	</target>

	<!-- adds the current version to the composer json -->
	<target name="composer-inject-version" depends="get-version">
		<replace file="${build}/composer.json">
			<replacetoken><![CDATA[    "license": "GPL-3.0",]]></replacetoken>
			<replacevalue expandProperties="true"><![CDATA[    "license": "GPL-3.0",
    "version": "${version}",]]></replacevalue>
		</replace>
		<echo message="Injected version ${version} into composer" />
	</target>

	<!-- removes all files wich are not needed in the release -->
	<target name="clean-git">
		<delete dir="${build}/.git" />
		<delete dir="${build}/bin" />
		<delete dir="${build}/doc/docbook" />
		<delete dir="${build}/doc/xsl" />
		<delete dir="${build}/service" />
		<delete dir="${build}/tests" />
		<delete dir="${build}/vendor" />
		<delete file="${build}/.gitignore" />
		<delete file="${build}/.travis.yml" />
		<delete file="${build}/composer.lock" />
		<delete file="${build}/doc/amun.xsl" />
		<delete file="${build}/doc/distributed_network.html" />
		<delete file="${build}/phpunit.xml" />
		<delete file="${build}/todo.txt" />
	</target>

	<target name="compress" depends="get-version">
		<tar destfile="${bin}/amun_${version}.tar" basedir="${build}" />
		<gzip destfile="${bin}/amun_${version}.tar.gz" src="${bin}/amun_${version}.tar" />
		<delete file="${bin}/amun_${version}.tar" />
		<zip destfile="${bin}/amun_${version}.zip" basedir="${build}" />
	</target>

	<target name="build-release" depends="phpunit,get-version,composer-inject-version,clean-git,compress">
		<!-- change config -->
		<replace file="${build}/configuration.php" token="http://127.0.0.1:8000/public" value="http://127.0.0.1/amun/public" />
	</target>

	<target name="clean">
		<delete dir="${build}" />
	</target>

	<target name="build-all" depends="clean,build-release" />

	<target name="clean-doc">
		<delete>
			<fileset dir="${doc}">
				<include name="development.html" />
				<include name="distributed_network.html" />
				<include name="gplv3.html" />
				<include name="manual.html" />
			</fileset>
		</delete>
	</target>

	<target name="build-doc" depends="clean-doc">
		<xslt basedir="${doc}/docbook" destdir="${doc}" includes="**/*.xml" extension=".html" style="${doc}/amun.xsl">
			<factory name="net.sf.saxon.TransformerFactoryImpl" />
		</xslt>
	</target>
</project>
